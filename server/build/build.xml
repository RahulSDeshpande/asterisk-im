<project name="phone" basedir=".." default="jar">


    <!-- a build.properties file can be specified to override any properties -->
    <property file="${basedir}/build.properties"/>


    <property name="target.dir" value="${basedir}/target" />
    <property name="work.dir" value="${basedir}/work"/>
    <property name="web-inf.dir" value="${work.dir}/web/WEB-INF"/>
    <property name="classes.dir" value="${basedir}/classes"/>
    <property name="java.src.dir" value="${basedir}/src/java"/>
    <property name="lib.dir" value="${basedir}/build/lib"/>
    <property name="work.src.dir" value="${basedir}/src/work"/>
    <property name="web.src.dir" value="${basedir}/src/web"/>
    <property name="jsp.package" value="org.jivesoftware.wildfire.plugin.phone"/>
    <property name="wildfire.dir" value="${basedir}/../../wildfire"/>
    <property name="jar.file" value="${target.dir}/asterisk-im.jar"/>
    <property name="jar-jtapi.file" value="${target.dir}/jtapi/asterisk-im.jar"/>
    <property name="jar-ajtapi.file" value="${target.dir}/ajtapi/asterisk-im.jar"/>

    <path id="lib.path">
        <pathelement path="${classes.dir}"/>
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${wildfire.dir}/build/lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement path="${wildfire.dir}/target/classes"/>
    </path>


    <!-- Declare the jspc task with our plugin's classpath -->
    <taskdef classname="org.apache.jasper.JspC" name="jasper2" loaderref="jasperB">
        <classpath>
            <path refid="lib.path"/>
        </classpath>
    </taskdef>

    <target name="init">
        <!-- Check for min build requirements -->
        <condition property="ant.not.ok" value="true">
            <not>
                <contains string="${ant.version}" substring="1.6"/>
            </not>
        </condition>
        <condition property="java.not.ok" value="true">
            <not>
                <contains string="${ant.java.version}" substring="1.5"/>
            </not>
        </condition>
        <fail if="ant.not.ok" message="Must use Ant 1.6.x to build Wildfire"/>
        <fail if="java.not.ok" message="Must use JDK 1.5.x to build Wildfire"/>
    </target>

    <target name="jspc" depends="init">

        <mkdir dir="${web-inf.dir}"/>
        <!-- JSP to Java -->
        <jasper2 validateXml="false"
                 uriroot="${web.src.dir}"
                 outputDir="${work.src.dir}"
                 package="${jsp.package}"/>

    </target>


    <target name="compile" depends="jspc">
        <mkdir dir="${classes.dir}"/>

        <javac srcdir="${java.src.dir}"
               destdir="${classes.dir}"
               source="1.5"
               classpathref="lib.path"
               debug="true"/>

        <copy todir="${classes.dir}" overwrite="true">
            <fileset dir="${java.src.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/*.sql"/>
            </fileset>
        </copy>


        <javac srcdir="${work.src.dir}"
               destdir="${classes.dir}"
               source="1.5"
               classpathref="lib.path"
               debug="true"/>
    </target>

    <target name="jar" depends="clean,compile">
        <mkdir dir="${target.dir}"/>
        <mkdir dir="${target.dir}/ajtapi"/>
        <mkdir dir="${target.dir}/jtapi"/>

        <mkdir dir="${work.dir}"/>
        <copy todir="${work.dir}">
            <fileset dir="${basedir}" includes="*.*" excludes="*.jar"/>
        </copy>

        <mkdir dir="${work.dir}/lib"/>
        <copy todir="${work.dir}/lib">
            <fileset dir="${lib.dir}"/>
        </copy>

        <mkdir dir="${work.dir}/web/images"/>
        <copy todir="${work.dir}/web/images">
            <fileset dir="${web.src.dir}/images"/>
        </copy>

        <!-- jar the classes and place in here -->
        <jar file="${work.dir}/lib/asterisk-im-classes.jar"
             basedir="${classes.dir}"/>


        <delete file="${work.dir}/plugin.xml"/>
        <delete file="${work.dir}/plugin-ajtapi.xml"/>
        <delete file="${work.dir}/plugin-jtapi.xml"/>

        <copy file="${basedir}/plugin.xml" tofile="${work.dir}/plugin.xml"/>
        <jar file="${jar.file}" basedir="${work.dir}" update="false"/>
        <delete file="${work.dir}/plugin.xml"/>
        <copy file="${basedir}/plugin-jtapi.xml" tofile="${work.dir}/plugin.xml"/>
        <jar file="${jar-jtapi.file}" basedir="${work.dir}" update="false"/>
        <delete file="${work.dir}/plugin.xml"/>
        <copy file="${basedir}/plugin-ajtapi.xml" tofile="${work.dir}/plugin.xml"/>
        <jar file="${jar-ajtapi.file}" basedir="${work.dir}" update="false"/>

    </target>

    <target name="deploy" depends="jar">
        <copy file="${jar.file}" todir="${wildfire.dir}/target/plugins"/>
    </target>


    <target name="clean">
        <delete dir="${classes.dir}"/>
        <delete dir="${work.src.dir}"/>
        <delete file="${jar.file}"/>
        <delete dir="${web-inf.dir}"/>
        <delete dir="${work.dir}"/>
        <delete dir="${target.dir}"/>
    </target>


    <target name="__assign-unknown__" unless="database">
        <property name="database" value="unknown"/>
    </target>

</project>
